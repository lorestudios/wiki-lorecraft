{
  "version": 3,
  "sources": ["../../../../node_modules/vue3-carousel/dist/carousel.es.js"],
  "sourcesContent": ["/**\n * Vue 3 Carousel 0.2.16\n * (c) 2023\n * @license MIT\n */\nimport { Fragment, defineComponent, inject, ref, h, reactive, provide, onMounted, nextTick, onUnmounted, computed, watch, cloneVNode } from 'vue';\n\nconst defaultConfigs = {\r\n    itemsToShow: 1,\r\n    itemsToScroll: 1,\r\n    modelValue: 0,\r\n    transition: 300,\r\n    autoplay: 0,\r\n    snapAlign: 'center',\r\n    wrapAround: false,\r\n    throttle: 16,\r\n    pauseAutoplayOnHover: false,\r\n    mouseDrag: true,\r\n    touchDrag: true,\r\n    dir: 'ltr',\r\n    breakpoints: undefined,\r\n};\n\nconst carouselProps = {\r\n    // count of items to showed per view\r\n    itemsToShow: {\r\n        default: defaultConfigs.itemsToShow,\r\n        type: Number,\r\n    },\r\n    // count of items to be scrolled\r\n    itemsToScroll: {\r\n        default: defaultConfigs.itemsToScroll,\r\n        type: Number,\r\n    },\r\n    // control infinite scrolling mode\r\n    wrapAround: {\r\n        default: defaultConfigs.wrapAround,\r\n        type: Boolean,\r\n    },\r\n    // control max drag\r\n    throttle: {\r\n        default: defaultConfigs.throttle,\r\n        type: Number,\r\n    },\r\n    // control snap position alignment\r\n    snapAlign: {\r\n        default: defaultConfigs.snapAlign,\r\n        validator(value) {\r\n            // The value must match one of these strings\r\n            return ['start', 'end', 'center', 'center-even', 'center-odd'].includes(value);\r\n        },\r\n    },\r\n    // sliding transition time in ms\r\n    transition: {\r\n        default: defaultConfigs.transition,\r\n        type: Number,\r\n    },\r\n    // an object to store breakpoints\r\n    breakpoints: {\r\n        default: defaultConfigs.breakpoints,\r\n        type: Object,\r\n    },\r\n    // time to auto advance slides in ms\r\n    autoplay: {\r\n        default: defaultConfigs.autoplay,\r\n        type: Number,\r\n    },\r\n    // pause autoplay when mouse hover over the carousel\r\n    pauseAutoplayOnHover: {\r\n        default: defaultConfigs.pauseAutoplayOnHover,\r\n        type: Boolean,\r\n    },\r\n    // slide number number of initial slide\r\n    modelValue: {\r\n        default: undefined,\r\n        type: Number,\r\n    },\r\n    // toggle mouse dragging.\r\n    mouseDrag: {\r\n        default: defaultConfigs.mouseDrag,\r\n        type: Boolean,\r\n    },\r\n    // toggle mouse dragging.\r\n    touchDrag: {\r\n        default: defaultConfigs.touchDrag,\r\n        type: Boolean,\r\n    },\r\n    // control snap position alignment\r\n    dir: {\r\n        default: defaultConfigs.dir,\r\n        validator(value) {\r\n            // The value must match one of these strings\r\n            return ['rtl', 'ltr'].includes(value);\r\n        },\r\n    },\r\n    // an object to pass all settings\r\n    settings: {\r\n        default() {\r\n            return {};\r\n        },\r\n        type: Object,\r\n    },\r\n};\n\nfunction getMaxSlideIndex({ config, slidesCount }) {\r\n    const { snapAlign, wrapAround, itemsToShow = 1 } = config;\r\n    if (wrapAround) {\r\n        return Math.max(slidesCount - 1, 0);\r\n    }\r\n    let output;\r\n    switch (snapAlign) {\r\n        case 'start':\r\n            output = slidesCount - itemsToShow;\r\n            break;\r\n        case 'end':\r\n            output = slidesCount - 1;\r\n            break;\r\n        case 'center':\r\n        case 'center-odd':\r\n            output = slidesCount - Math.ceil((itemsToShow - 0.5) / 2);\r\n            break;\r\n        case 'center-even':\r\n            output = slidesCount - Math.ceil(itemsToShow / 2);\r\n            break;\r\n        default:\r\n            output = 0;\r\n            break;\r\n    }\r\n    return Math.max(output, 0);\r\n}\n\nfunction getMinSlideIndex({ config, slidesCount }) {\r\n    const { wrapAround, snapAlign, itemsToShow = 1 } = config;\r\n    let output = 0;\r\n    if (wrapAround || itemsToShow > slidesCount) {\r\n        return output;\r\n    }\r\n    switch (snapAlign) {\r\n        case 'start':\r\n            output = 0;\r\n            break;\r\n        case 'end':\r\n            output = itemsToShow - 1;\r\n            break;\r\n        case 'center':\r\n        case 'center-odd':\r\n            output = Math.floor((itemsToShow - 1) / 2);\r\n            break;\r\n        case 'center-even':\r\n            output = Math.floor((itemsToShow - 2) / 2);\r\n            break;\r\n        default:\r\n            output = 0;\r\n            break;\r\n    }\r\n    return output;\r\n}\n\nfunction getNumberInRange({ val, max, min }) {\r\n    if (max < min) {\r\n        return val;\r\n    }\r\n    return Math.min(Math.max(val, min), max);\r\n}\n\nfunction getSlidesToScroll({ config, currentSlide, slidesCount }) {\r\n    const { snapAlign, wrapAround, itemsToShow = 1 } = config;\r\n    let output = currentSlide;\r\n    switch (snapAlign) {\r\n        case 'center':\r\n        case 'center-odd':\r\n            output -= (itemsToShow - 1) / 2;\r\n            break;\r\n        case 'center-even':\r\n            output -= (itemsToShow - 2) / 2;\r\n            break;\r\n        case 'end':\r\n            output -= itemsToShow - 1;\r\n            break;\r\n    }\r\n    if (wrapAround) {\r\n        return output;\r\n    }\r\n    return getNumberInRange({\r\n        val: output,\r\n        max: slidesCount - itemsToShow,\r\n        min: 0,\r\n    });\r\n}\n\nfunction getSlidesVNodes(vNode) {\r\n    if (!vNode)\r\n        return [];\r\n    return vNode.reduce((acc, node) => {\r\n        var _a;\r\n        if (node.type === Fragment) {\r\n            return [...acc, ...getSlidesVNodes(node.children)];\r\n        }\r\n        if (((_a = node.type) === null || _a === void 0 ? void 0 : _a.name) === 'CarouselSlide') {\r\n            return [...acc, node];\r\n        }\r\n        return acc;\r\n    }, []);\r\n}\n\nfunction mapNumberToRange({ val, max, min = 0 }) {\r\n    if (val > max) {\r\n        return mapNumberToRange({ val: val - (max + 1), max, min });\r\n    }\r\n    if (val < min) {\r\n        return mapNumberToRange({ val: val + (max + 1), max, min });\r\n    }\r\n    return val;\r\n}\n\n/**\r\n * return a throttle version of the function\r\n * Throttling\r\n *\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nfunction throttle(fn, limit) {\r\n    let inThrottle;\r\n    if (!limit) {\r\n        return fn;\r\n    }\r\n    return function (...args) {\r\n        const self = this;\r\n        if (!inThrottle) {\r\n            fn.apply(self, args);\r\n            inThrottle = true;\r\n            setTimeout(() => (inThrottle = false), limit);\r\n        }\r\n    };\r\n}\n\n/**\r\n * return a debounced version of the function\r\n * @param fn\r\n * @param delay\r\n */\r\n// eslint-disable-next-line no-unused-vars\r\nfunction debounce(fn, delay) {\r\n    let timerId;\r\n    return function (...args) {\r\n        if (timerId) {\r\n            clearTimeout(timerId);\r\n        }\r\n        timerId = setTimeout(() => {\r\n            fn(...args);\r\n            timerId = null;\r\n        }, delay);\r\n    };\r\n}\n\nvar ARIAComponent = defineComponent({\r\n    name: 'ARIA',\r\n    setup() {\r\n        const currentSlide = inject('currentSlide', ref(0));\r\n        const slidesCount = inject('slidesCount', ref(0));\r\n        return () => h('div', {\r\n            class: ['carousel__liveregion', 'carousel__sr-only'],\r\n            'aria-live': 'polite',\r\n            'aria-atomic': 'true',\r\n        }, `Item ${currentSlide.value + 1} of ${slidesCount.value}`);\r\n    },\r\n});\n\nvar Carousel = defineComponent({\r\n    name: 'Carousel',\r\n    props: carouselProps,\r\n    setup(props, { slots, emit, expose }) {\r\n        var _a;\r\n        const root = ref(null);\r\n        const slides = ref([]);\r\n        const slideWidth = ref(0);\r\n        const slidesCount = ref(0);\r\n        let breakpoints = ref({});\r\n        // generate carousel configs\r\n        let __defaultConfig = Object.assign({}, defaultConfigs);\r\n        // current config\r\n        const config = reactive(Object.assign({}, __defaultConfig));\r\n        // slides\r\n        const currentSlideIndex = ref((_a = props.modelValue) !== null && _a !== void 0 ? _a : 0);\r\n        const prevSlideIndex = ref(0);\r\n        const middleSlideIndex = ref(0);\r\n        const maxSlideIndex = ref(0);\r\n        const minSlideIndex = ref(0);\r\n        let autoplayTimer;\r\n        let transitionTimer;\r\n        provide('config', config);\r\n        provide('slidesCount', slidesCount);\r\n        provide('currentSlide', currentSlideIndex);\r\n        provide('maxSlide', maxSlideIndex);\r\n        provide('minSlide', minSlideIndex);\r\n        provide('slideWidth', slideWidth);\r\n        /**\r\n         * Configs\r\n         */\r\n        function initDefaultConfigs() {\r\n            // generate carousel configs\r\n            const mergedConfigs = Object.assign(Object.assign({}, props), props.settings);\r\n            // Set breakpoints\r\n            breakpoints = ref(Object.assign({}, mergedConfigs.breakpoints));\r\n            // remove extra values\r\n            __defaultConfig = Object.assign(Object.assign({}, mergedConfigs), { settings: undefined, breakpoints: undefined });\r\n            bindConfigs(__defaultConfig);\r\n        }\r\n        function updateBreakpointsConfigs() {\r\n            if (!Object.keys(breakpoints.value).length)\r\n                return;\r\n            const breakpointsArray = Object.keys(breakpoints.value)\r\n                .map((key) => Number(key))\r\n                .sort((a, b) => +b - +a);\r\n            let newConfig = Object.assign({}, __defaultConfig);\r\n            breakpointsArray.some((breakpoint) => {\r\n                const isMatched = window.matchMedia(`(min-width: ${breakpoint}px)`).matches;\r\n                if (isMatched) {\r\n                    newConfig = Object.assign(Object.assign({}, newConfig), breakpoints.value[breakpoint]);\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            bindConfigs(newConfig);\r\n        }\r\n        function bindConfigs(newConfig) {\r\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n            //@ts-ignore\r\n            Object.entries(newConfig).forEach(([key, val]) => (config[key] = val));\r\n        }\r\n        const handleWindowResize = debounce(() => {\r\n            updateBreakpointsConfigs();\r\n            updateSlidesData();\r\n            updateSlideWidth();\r\n        }, 16);\r\n        /**\r\n         * Setup functions\r\n         */\r\n        function updateSlideWidth() {\r\n            if (!root.value)\r\n                return;\r\n            const rect = root.value.getBoundingClientRect();\r\n            slideWidth.value = rect.width / config.itemsToShow;\r\n        }\r\n        function updateSlidesData() {\r\n            if (slidesCount.value <= 0)\r\n                return;\r\n            middleSlideIndex.value = Math.ceil((slidesCount.value - 1) / 2);\r\n            maxSlideIndex.value = getMaxSlideIndex({ config, slidesCount: slidesCount.value });\r\n            minSlideIndex.value = getMinSlideIndex({ config, slidesCount: slidesCount.value });\r\n            if (!config.wrapAround) {\r\n                currentSlideIndex.value = getNumberInRange({\r\n                    val: currentSlideIndex.value,\r\n                    max: maxSlideIndex.value,\r\n                    min: minSlideIndex.value,\r\n                });\r\n            }\r\n        }\r\n        onMounted(() => {\r\n            nextTick(() => setTimeout(() => {\r\n                updateBreakpointsConfigs();\r\n                updateSlidesData();\r\n                updateSlideWidth();\r\n                emit('init');\r\n            }, 16));\r\n            initAutoplay();\r\n            window.addEventListener('resize', handleWindowResize, { passive: true });\r\n        });\r\n        onUnmounted(() => {\r\n            if (transitionTimer) {\r\n                clearTimeout(transitionTimer);\r\n            }\r\n            if (autoplayTimer) {\r\n                clearInterval(autoplayTimer);\r\n            }\r\n            window.removeEventListener('resize', handleWindowResize, {\r\n                passive: true,\r\n            });\r\n        });\r\n        /**\r\n         * Carousel Event listeners\r\n         */\r\n        let isTouch = false;\r\n        const startPosition = { x: 0, y: 0 };\r\n        const endPosition = { x: 0, y: 0 };\r\n        const dragged = reactive({ x: 0, y: 0 });\r\n        const isHover = ref(false);\r\n        const handleMouseEnter = () => {\r\n            isHover.value = true;\r\n        };\r\n        const handleMouseLeave = () => {\r\n            isHover.value = false;\r\n        };\r\n        function handleDragStart(event) {\r\n            if (['INPUT', 'TEXTAREA', 'SELECT'].includes(event.target.tagName)) {\r\n                return;\r\n            }\r\n            isTouch = event.type === 'touchstart';\r\n            if (!isTouch) {\r\n                event.preventDefault();\r\n            }\r\n            if ((!isTouch && event.button !== 0) || isSliding.value) {\r\n                return;\r\n            }\r\n            startPosition.x = isTouch ? event.touches[0].clientX : event.clientX;\r\n            startPosition.y = isTouch ? event.touches[0].clientY : event.clientY;\r\n            document.addEventListener(isTouch ? 'touchmove' : 'mousemove', handleDragging, true);\r\n            document.addEventListener(isTouch ? 'touchend' : 'mouseup', handleDragEnd, true);\r\n        }\r\n        const handleDragging = throttle((event) => {\r\n            endPosition.x = isTouch ? event.touches[0].clientX : event.clientX;\r\n            endPosition.y = isTouch ? event.touches[0].clientY : event.clientY;\r\n            const deltaX = endPosition.x - startPosition.x;\r\n            const deltaY = endPosition.y - startPosition.y;\r\n            dragged.y = deltaY;\r\n            dragged.x = deltaX;\r\n        }, config.throttle);\r\n        function handleDragEnd() {\r\n            const direction = config.dir === 'rtl' ? -1 : 1;\r\n            const tolerance = Math.sign(dragged.x) * 0.4;\r\n            const draggedSlides = Math.round(dragged.x / slideWidth.value + tolerance) * direction;\r\n            // Prevent clicking if there is clicked slides\r\n            if (draggedSlides && !isTouch) {\r\n                const captureClick = (e) => {\r\n                    e.stopPropagation();\r\n                    window.removeEventListener('click', captureClick, true);\r\n                };\r\n                window.addEventListener('click', captureClick, true);\r\n            }\r\n            slideTo(currentSlideIndex.value - draggedSlides);\r\n            dragged.x = 0;\r\n            dragged.y = 0;\r\n            document.removeEventListener(isTouch ? 'touchmove' : 'mousemove', handleDragging, true);\r\n            document.removeEventListener(isTouch ? 'touchend' : 'mouseup', handleDragEnd, true);\r\n        }\r\n        /**\r\n         * Autoplay\r\n         */\r\n        function initAutoplay() {\r\n            if (!config.autoplay || config.autoplay <= 0) {\r\n                return;\r\n            }\r\n            autoplayTimer = setInterval(() => {\r\n                if (config.pauseAutoplayOnHover && isHover.value) {\r\n                    return;\r\n                }\r\n                next();\r\n            }, config.autoplay);\r\n        }\r\n        function resetAutoplay() {\r\n            if (autoplayTimer) {\r\n                clearInterval(autoplayTimer);\r\n                autoplayTimer = null;\r\n            }\r\n            initAutoplay();\r\n        }\r\n        /**\r\n         * Navigation function\r\n         */\r\n        const isSliding = ref(false);\r\n        function slideTo(slideIndex) {\r\n            const currentVal = config.wrapAround\r\n                ? slideIndex\r\n                : getNumberInRange({\r\n                    val: slideIndex,\r\n                    max: maxSlideIndex.value,\r\n                    min: minSlideIndex.value,\r\n                });\r\n            if (currentSlideIndex.value === currentVal || isSliding.value) {\r\n                return;\r\n            }\r\n            emit('slide-start', {\r\n                slidingToIndex: slideIndex,\r\n                currentSlideIndex: currentSlideIndex.value,\r\n                prevSlideIndex: prevSlideIndex.value,\r\n                slidesCount: slidesCount.value,\r\n            });\r\n            isSliding.value = true;\r\n            prevSlideIndex.value = currentSlideIndex.value;\r\n            currentSlideIndex.value = currentVal;\r\n            transitionTimer = setTimeout(() => {\r\n                if (config.wrapAround) {\r\n                    const mappedNumber = mapNumberToRange({\r\n                        val: currentVal,\r\n                        max: maxSlideIndex.value,\r\n                        min: 0,\r\n                    });\r\n                    if (mappedNumber !== currentSlideIndex.value) {\r\n                        currentSlideIndex.value = mappedNumber;\r\n                        emit('loop', {\r\n                            currentSlideIndex: currentSlideIndex.value,\r\n                            slidingToIndex: slideIndex,\r\n                        });\r\n                    }\r\n                }\r\n                emit('update:modelValue', currentSlideIndex.value);\r\n                emit('slide-end', {\r\n                    currentSlideIndex: currentSlideIndex.value,\r\n                    prevSlideIndex: prevSlideIndex.value,\r\n                    slidesCount: slidesCount.value,\r\n                });\r\n                isSliding.value = false;\r\n                resetAutoplay();\r\n            }, config.transition);\r\n        }\r\n        function next() {\r\n            slideTo(currentSlideIndex.value + config.itemsToScroll);\r\n        }\r\n        function prev() {\r\n            slideTo(currentSlideIndex.value - config.itemsToScroll);\r\n        }\r\n        const nav = { slideTo, next, prev };\r\n        provide('nav', nav);\r\n        provide('isSliding', isSliding);\r\n        /**\r\n         * Track style\r\n         */\r\n        const slidesToScroll = computed(() => getSlidesToScroll({\r\n            config,\r\n            currentSlide: currentSlideIndex.value,\r\n            slidesCount: slidesCount.value,\r\n        }));\r\n        provide('slidesToScroll', slidesToScroll);\r\n        const trackStyle = computed(() => {\r\n            const direction = config.dir === 'rtl' ? -1 : 1;\r\n            const xScroll = slidesToScroll.value * slideWidth.value * direction;\r\n            return {\r\n                transform: `translateX(${dragged.x - xScroll}px)`,\r\n                transition: `${isSliding.value ? config.transition : 0}ms`,\r\n                margin: config.wrapAround ? `0 -${slidesCount.value * slideWidth.value}px` : '',\r\n                width: `100%`,\r\n            };\r\n        });\r\n        function restartCarousel() {\r\n            initDefaultConfigs();\r\n            updateBreakpointsConfigs();\r\n            updateSlidesData();\r\n            updateSlideWidth();\r\n            resetAutoplay();\r\n        }\r\n        // Update the carousel on props change\r\n        Object.keys(carouselProps).forEach((prop) => {\r\n            if (['modelValue'].includes(prop))\r\n                return;\r\n            watch(() => props[prop], restartCarousel);\r\n        });\r\n        // Handle changing v-model value\r\n        watch(() => props['modelValue'], (val) => {\r\n            if (val !== currentSlideIndex.value) {\r\n                slideTo(Number(val));\r\n            }\r\n        });\r\n        // Handel when slides added/removed\r\n        watch(slidesCount, updateSlidesData);\r\n        // Init carousel\r\n        initDefaultConfigs();\r\n        const data = {\r\n            config,\r\n            slidesCount,\r\n            slideWidth,\r\n            next,\r\n            prev,\r\n            slideTo,\r\n            currentSlide: currentSlideIndex,\r\n            maxSlide: maxSlideIndex,\r\n            minSlide: minSlideIndex,\r\n            middleSlide: middleSlideIndex,\r\n        };\r\n        expose({\r\n            updateBreakpointsConfigs,\r\n            updateSlidesData,\r\n            updateSlideWidth,\r\n            initDefaultConfigs,\r\n            restartCarousel,\r\n            slideTo,\r\n            next,\r\n            prev,\r\n            nav,\r\n            data,\r\n        });\r\n        const slotSlides = slots.default || slots.slides;\r\n        const slotAddons = slots.addons;\r\n        const slotsProps = reactive(data);\r\n        return () => {\r\n            const slidesElements = getSlidesVNodes(slotSlides === null || slotSlides === void 0 ? void 0 : slotSlides(slotsProps));\r\n            const addonsElements = (slotAddons === null || slotAddons === void 0 ? void 0 : slotAddons(slotsProps)) || [];\r\n            slidesElements.forEach((el, index) => (el.props.index = index));\r\n            let output = slidesElements;\r\n            if (config.wrapAround) {\r\n                const slidesBefore = slidesElements.map((el, index) => cloneVNode(el, {\r\n                    index: -slidesElements.length + index,\r\n                    isClone: true,\r\n                    key: `clone-before-${index}`,\r\n                }));\r\n                const slidesAfter = slidesElements.map((el, index) => cloneVNode(el, {\r\n                    index: slidesElements.length + index,\r\n                    isClone: true,\r\n                    key: `clone-after-${index}`,\r\n                }));\r\n                output = [...slidesBefore, ...slidesElements, ...slidesAfter];\r\n            }\r\n            slides.value = slidesElements;\r\n            slidesCount.value = Math.max(slidesElements.length, 1);\r\n            const trackEl = h('ol', {\r\n                class: 'carousel__track',\r\n                style: trackStyle.value,\r\n                onMousedownCapture: config.mouseDrag ? handleDragStart : null,\r\n                onTouchstartPassiveCapture: config.touchDrag ? handleDragStart : null,\r\n            }, output);\r\n            const viewPortEl = h('div', { class: 'carousel__viewport' }, trackEl);\r\n            return h('section', {\r\n                ref: root,\r\n                class: {\r\n                    carousel: true,\r\n                    'carousel--rtl': config.dir === 'rtl',\r\n                },\r\n                dir: config.dir,\r\n                'aria-label': 'Gallery',\r\n                tabindex: '0',\r\n                onMouseenter: handleMouseEnter,\r\n                onMouseleave: handleMouseLeave,\r\n            }, [viewPortEl, addonsElements, h(ARIAComponent)]);\r\n        };\r\n    },\r\n});\n\nconst icons = {\r\n    arrowUp: 'M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z',\r\n    arrowDown: 'M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z',\r\n    arrowRight: 'M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z',\r\n    arrowLeft: 'M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z',\r\n};\n\nconst Icon = (props) => {\r\n    const iconName = props.name;\r\n    if (!iconName || typeof iconName !== 'string') {\r\n        return;\r\n    }\r\n    const path = icons[iconName];\r\n    const pathEl = h('path', { d: path });\r\n    const iconTitle = (props.title || iconName);\r\n    const titleEl = h('title', iconTitle);\r\n    return h('svg', {\r\n        class: 'carousel__icon',\r\n        viewBox: '0 0 24 24',\r\n        role: 'img',\r\n        ariaLabel: iconTitle,\r\n    }, [titleEl, pathEl]);\r\n};\r\nIcon.props = { name: String, title: String };\n\nconst Navigation = (props, { slots, attrs }) => {\r\n    const { next: slotNext, prev: slotPrev } = slots || {};\r\n    const config = inject('config', reactive(Object.assign({}, defaultConfigs)));\r\n    const maxSlide = inject('maxSlide', ref(1));\r\n    const minSlide = inject('minSlide', ref(1));\r\n    const currentSlide = inject('currentSlide', ref(1));\r\n    const nav = inject('nav', {});\r\n    const { dir, wrapAround } = config;\r\n    const isRTL = dir === 'rtl';\r\n    const prevButton = h('button', {\r\n        type: 'button',\r\n        class: [\r\n            'carousel__prev',\r\n            !wrapAround && currentSlide.value <= minSlide.value && 'carousel__prev--disabled',\r\n            attrs === null || attrs === void 0 ? void 0 : attrs.class,\r\n        ],\r\n        'aria-label': `Navigate to previous slide`,\r\n        onClick: nav.prev,\r\n    }, (slotPrev === null || slotPrev === void 0 ? void 0 : slotPrev()) || h(Icon, { name: isRTL ? 'arrowRight' : 'arrowLeft' }));\r\n    const nextButton = h('button', {\r\n        type: 'button',\r\n        class: [\r\n            'carousel__next',\r\n            !wrapAround && currentSlide.value >= maxSlide.value && 'carousel__next--disabled',\r\n            attrs === null || attrs === void 0 ? void 0 : attrs.class,\r\n        ],\r\n        'aria-label': `Navigate to next slide`,\r\n        onClick: nav.next,\r\n    }, (slotNext === null || slotNext === void 0 ? void 0 : slotNext()) || h(Icon, { name: isRTL ? 'arrowLeft' : 'arrowRight' }));\r\n    return [prevButton, nextButton];\r\n};\n\nconst Pagination = () => {\r\n    const maxSlide = inject('maxSlide', ref(1));\r\n    const minSlide = inject('minSlide', ref(1));\r\n    const currentSlide = inject('currentSlide', ref(1));\r\n    const nav = inject('nav', {});\r\n    const isActive = (slide) => mapNumberToRange({\r\n        val: currentSlide.value,\r\n        max: maxSlide.value,\r\n        min: 0,\r\n    }) === slide;\r\n    const children = [];\r\n    for (let slide = minSlide.value; slide < maxSlide.value + 1; slide++) {\r\n        const button = h('button', {\r\n            type: 'button',\r\n            class: {\r\n                'carousel__pagination-button': true,\r\n                'carousel__pagination-button--active': isActive(slide),\r\n            },\r\n            'aria-label': `Navigate to slide ${slide + 1}`,\r\n            onClick: () => nav.slideTo(slide),\r\n        });\r\n        const item = h('li', { class: 'carousel__pagination-item', key: slide }, button);\r\n        children.push(item);\r\n    }\r\n    return h('ol', { class: 'carousel__pagination' }, children);\r\n};\n\nvar Slide = defineComponent({\r\n    name: 'CarouselSlide',\r\n    props: {\r\n        index: {\r\n            type: Number,\r\n            default: 1,\r\n        },\r\n        isClone: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n    },\r\n    setup(props, { slots }) {\r\n        const config = inject('config', reactive(Object.assign({}, defaultConfigs)));\r\n        const currentSlide = inject('currentSlide', ref(0));\r\n        const slidesToScroll = inject('slidesToScroll', ref(0));\r\n        const slideWidth = inject('slideWidth', ref(0));\r\n        const isSliding = inject('isSliding', ref(false));\r\n        const slideStyle = computed(() => ({\r\n            width: slideWidth.value ? `${slideWidth.value}px` : `100%`,\r\n        }));\r\n        const isActive = () => props.index === currentSlide.value;\r\n        const isPrev = () => props.index === currentSlide.value - 1;\r\n        const isNext = () => props.index === currentSlide.value + 1;\r\n        const isVisible = () => {\r\n            const min = Math.floor(slidesToScroll.value);\r\n            const max = Math.ceil(slidesToScroll.value + config.itemsToShow - 1);\r\n            return props.index >= min && props.index <= max;\r\n        };\r\n        return () => {\r\n            var _a;\r\n            return h('li', {\r\n                style: slideStyle.value,\r\n                class: {\r\n                    carousel__slide: true,\r\n                    'carousel_slide--clone': props.isClone,\r\n                    'carousel__slide--visible': isVisible(),\r\n                    'carousel__slide--active': isActive(),\r\n                    'carousel__slide--prev': isPrev(),\r\n                    'carousel__slide--next': isNext(),\r\n                    'carousel__slide--sliding': isSliding.value,\r\n                },\r\n                'aria-hidden': !isVisible(),\r\n            }, (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots));\r\n        };\r\n    },\r\n});\n\nexport { Carousel, Icon, Navigation, Pagination, Slide };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAOA,IAAM,iBAAiB;AAAA,EACnB,aAAa;AAAA,EACb,eAAe;AAAA,EACf,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,UAAU;AAAA,EACV,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,UAAU;AAAA,EACV,sBAAsB;AAAA,EACtB,WAAW;AAAA,EACX,WAAW;AAAA,EACX,KAAK;AAAA,EACL,aAAa;AACjB;AAEA,IAAM,gBAAgB;AAAA;AAAA,EAElB,aAAa;AAAA,IACT,SAAS,eAAe;AAAA,IACxB,MAAM;AAAA,EACV;AAAA;AAAA,EAEA,eAAe;AAAA,IACX,SAAS,eAAe;AAAA,IACxB,MAAM;AAAA,EACV;AAAA;AAAA,EAEA,YAAY;AAAA,IACR,SAAS,eAAe;AAAA,IACxB,MAAM;AAAA,EACV;AAAA;AAAA,EAEA,UAAU;AAAA,IACN,SAAS,eAAe;AAAA,IACxB,MAAM;AAAA,EACV;AAAA;AAAA,EAEA,WAAW;AAAA,IACP,SAAS,eAAe;AAAA,IACxB,UAAU,OAAO;AAEb,aAAO,CAAC,SAAS,OAAO,UAAU,eAAe,YAAY,EAAE,SAAS,KAAK;AAAA,IACjF;AAAA,EACJ;AAAA;AAAA,EAEA,YAAY;AAAA,IACR,SAAS,eAAe;AAAA,IACxB,MAAM;AAAA,EACV;AAAA;AAAA,EAEA,aAAa;AAAA,IACT,SAAS,eAAe;AAAA,IACxB,MAAM;AAAA,EACV;AAAA;AAAA,EAEA,UAAU;AAAA,IACN,SAAS,eAAe;AAAA,IACxB,MAAM;AAAA,EACV;AAAA;AAAA,EAEA,sBAAsB;AAAA,IAClB,SAAS,eAAe;AAAA,IACxB,MAAM;AAAA,EACV;AAAA;AAAA,EAEA,YAAY;AAAA,IACR,SAAS;AAAA,IACT,MAAM;AAAA,EACV;AAAA;AAAA,EAEA,WAAW;AAAA,IACP,SAAS,eAAe;AAAA,IACxB,MAAM;AAAA,EACV;AAAA;AAAA,EAEA,WAAW;AAAA,IACP,SAAS,eAAe;AAAA,IACxB,MAAM;AAAA,EACV;AAAA;AAAA,EAEA,KAAK;AAAA,IACD,SAAS,eAAe;AAAA,IACxB,UAAU,OAAO;AAEb,aAAO,CAAC,OAAO,KAAK,EAAE,SAAS,KAAK;AAAA,IACxC;AAAA,EACJ;AAAA;AAAA,EAEA,UAAU;AAAA,IACN,UAAU;AACN,aAAO,CAAC;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,EACV;AACJ;AAEA,SAAS,iBAAiB,EAAE,QAAQ,YAAY,GAAG;AAC/C,QAAM,EAAE,WAAW,YAAY,cAAc,EAAE,IAAI;AACnD,MAAI,YAAY;AACZ,WAAO,KAAK,IAAI,cAAc,GAAG,CAAC;AAAA,EACtC;AACA,MAAI;AACJ,UAAQ,WAAW;AAAA,IACf,KAAK;AACD,eAAS,cAAc;AACvB;AAAA,IACJ,KAAK;AACD,eAAS,cAAc;AACvB;AAAA,IACJ,KAAK;AAAA,IACL,KAAK;AACD,eAAS,cAAc,KAAK,MAAM,cAAc,OAAO,CAAC;AACxD;AAAA,IACJ,KAAK;AACD,eAAS,cAAc,KAAK,KAAK,cAAc,CAAC;AAChD;AAAA,IACJ;AACI,eAAS;AACT;AAAA,EACR;AACA,SAAO,KAAK,IAAI,QAAQ,CAAC;AAC7B;AAEA,SAAS,iBAAiB,EAAE,QAAQ,YAAY,GAAG;AAC/C,QAAM,EAAE,YAAY,WAAW,cAAc,EAAE,IAAI;AACnD,MAAI,SAAS;AACb,MAAI,cAAc,cAAc,aAAa;AACzC,WAAO;AAAA,EACX;AACA,UAAQ,WAAW;AAAA,IACf,KAAK;AACD,eAAS;AACT;AAAA,IACJ,KAAK;AACD,eAAS,cAAc;AACvB;AAAA,IACJ,KAAK;AAAA,IACL,KAAK;AACD,eAAS,KAAK,OAAO,cAAc,KAAK,CAAC;AACzC;AAAA,IACJ,KAAK;AACD,eAAS,KAAK,OAAO,cAAc,KAAK,CAAC;AACzC;AAAA,IACJ;AACI,eAAS;AACT;AAAA,EACR;AACA,SAAO;AACX;AAEA,SAAS,iBAAiB,EAAE,KAAK,KAAK,IAAI,GAAG;AACzC,MAAI,MAAM,KAAK;AACX,WAAO;AAAA,EACX;AACA,SAAO,KAAK,IAAI,KAAK,IAAI,KAAK,GAAG,GAAG,GAAG;AAC3C;AAEA,SAAS,kBAAkB,EAAE,QAAQ,cAAc,YAAY,GAAG;AAC9D,QAAM,EAAE,WAAW,YAAY,cAAc,EAAE,IAAI;AACnD,MAAI,SAAS;AACb,UAAQ,WAAW;AAAA,IACf,KAAK;AAAA,IACL,KAAK;AACD,iBAAW,cAAc,KAAK;AAC9B;AAAA,IACJ,KAAK;AACD,iBAAW,cAAc,KAAK;AAC9B;AAAA,IACJ,KAAK;AACD,gBAAU,cAAc;AACxB;AAAA,EACR;AACA,MAAI,YAAY;AACZ,WAAO;AAAA,EACX;AACA,SAAO,iBAAiB;AAAA,IACpB,KAAK;AAAA,IACL,KAAK,cAAc;AAAA,IACnB,KAAK;AAAA,EACT,CAAC;AACL;AAEA,SAAS,gBAAgB,OAAO;AAC5B,MAAI,CAAC;AACD,WAAO,CAAC;AACZ,SAAO,MAAM,OAAO,CAAC,KAAK,SAAS;AAC/B,QAAI;AACJ,QAAI,KAAK,SAAS,UAAU;AACxB,aAAO,CAAC,GAAG,KAAK,GAAG,gBAAgB,KAAK,QAAQ,CAAC;AAAA,IACrD;AACA,UAAM,KAAK,KAAK,UAAU,QAAQ,OAAO,SAAS,SAAS,GAAG,UAAU,iBAAiB;AACrF,aAAO,CAAC,GAAG,KAAK,IAAI;AAAA,IACxB;AACA,WAAO;AAAA,EACX,GAAG,CAAC,CAAC;AACT;AAEA,SAAS,iBAAiB,EAAE,KAAK,KAAK,MAAM,EAAE,GAAG;AAC7C,MAAI,MAAM,KAAK;AACX,WAAO,iBAAiB,EAAE,KAAK,OAAO,MAAM,IAAI,KAAK,IAAI,CAAC;AAAA,EAC9D;AACA,MAAI,MAAM,KAAK;AACX,WAAO,iBAAiB,EAAE,KAAK,OAAO,MAAM,IAAI,KAAK,IAAI,CAAC;AAAA,EAC9D;AACA,SAAO;AACX;AAQA,SAAS,SAAS,IAAI,OAAO;AACzB,MAAI;AACJ,MAAI,CAAC,OAAO;AACR,WAAO;AAAA,EACX;AACA,SAAO,YAAa,MAAM;AACtB,UAAM,OAAO;AACb,QAAI,CAAC,YAAY;AACb,SAAG,MAAM,MAAM,IAAI;AACnB,mBAAa;AACb,iBAAW,MAAO,aAAa,OAAQ,KAAK;AAAA,IAChD;AAAA,EACJ;AACJ;AAQA,SAAS,SAAS,IAAI,OAAO;AACzB,MAAI;AACJ,SAAO,YAAa,MAAM;AACtB,QAAI,SAAS;AACT,mBAAa,OAAO;AAAA,IACxB;AACA,cAAU,WAAW,MAAM;AACvB,SAAG,GAAG,IAAI;AACV,gBAAU;AAAA,IACd,GAAG,KAAK;AAAA,EACZ;AACJ;AAEA,IAAI,gBAAgB,gBAAgB;AAAA,EAChC,MAAM;AAAA,EACN,QAAQ;AACJ,UAAM,eAAe,OAAO,gBAAgB,IAAI,CAAC,CAAC;AAClD,UAAM,cAAc,OAAO,eAAe,IAAI,CAAC,CAAC;AAChD,WAAO,MAAM,EAAE,OAAO;AAAA,MAClB,OAAO,CAAC,wBAAwB,mBAAmB;AAAA,MACnD,aAAa;AAAA,MACb,eAAe;AAAA,IACnB,GAAG,QAAQ,aAAa,QAAQ,QAAQ,YAAY,OAAO;AAAA,EAC/D;AACJ,CAAC;AAED,IAAI,WAAW,gBAAgB;AAAA,EAC3B,MAAM;AAAA,EACN,OAAO;AAAA,EACP,MAAM,OAAO,EAAE,OAAO,MAAM,OAAO,GAAG;AAClC,QAAI;AACJ,UAAM,OAAO,IAAI,IAAI;AACrB,UAAM,SAAS,IAAI,CAAC,CAAC;AACrB,UAAM,aAAa,IAAI,CAAC;AACxB,UAAM,cAAc,IAAI,CAAC;AACzB,QAAI,cAAc,IAAI,CAAC,CAAC;AAExB,QAAI,kBAAkB,OAAO,OAAO,CAAC,GAAG,cAAc;AAEtD,UAAM,SAAS,SAAS,OAAO,OAAO,CAAC,GAAG,eAAe,CAAC;AAE1D,UAAM,oBAAoB,KAAK,KAAK,MAAM,gBAAgB,QAAQ,OAAO,SAAS,KAAK,CAAC;AACxF,UAAM,iBAAiB,IAAI,CAAC;AAC5B,UAAM,mBAAmB,IAAI,CAAC;AAC9B,UAAM,gBAAgB,IAAI,CAAC;AAC3B,UAAM,gBAAgB,IAAI,CAAC;AAC3B,QAAI;AACJ,QAAI;AACJ,YAAQ,UAAU,MAAM;AACxB,YAAQ,eAAe,WAAW;AAClC,YAAQ,gBAAgB,iBAAiB;AACzC,YAAQ,YAAY,aAAa;AACjC,YAAQ,YAAY,aAAa;AACjC,YAAQ,cAAc,UAAU;AAIhC,aAAS,qBAAqB;AAE1B,YAAM,gBAAgB,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,KAAK,GAAG,MAAM,QAAQ;AAE5E,oBAAc,IAAI,OAAO,OAAO,CAAC,GAAG,cAAc,WAAW,CAAC;AAE9D,wBAAkB,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,aAAa,GAAG,EAAE,UAAU,QAAW,aAAa,OAAU,CAAC;AACjH,kBAAY,eAAe;AAAA,IAC/B;AACA,aAAS,2BAA2B;AAChC,UAAI,CAAC,OAAO,KAAK,YAAY,KAAK,EAAE;AAChC;AACJ,YAAM,mBAAmB,OAAO,KAAK,YAAY,KAAK,EACjD,IAAI,CAAC,QAAQ,OAAO,GAAG,CAAC,EACxB,KAAK,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;AAC3B,UAAI,YAAY,OAAO,OAAO,CAAC,GAAG,eAAe;AACjD,uBAAiB,KAAK,CAAC,eAAe;AAClC,cAAM,YAAY,OAAO,WAAW,eAAe,eAAe,EAAE;AACpE,YAAI,WAAW;AACX,sBAAY,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,SAAS,GAAG,YAAY,MAAM,UAAU,CAAC;AACrF,iBAAO;AAAA,QACX;AACA,eAAO;AAAA,MACX,CAAC;AACD,kBAAY,SAAS;AAAA,IACzB;AACA,aAAS,YAAY,WAAW;AAG5B,aAAO,QAAQ,SAAS,EAAE,QAAQ,CAAC,CAAC,KAAK,GAAG,MAAO,OAAO,GAAG,IAAI,GAAI;AAAA,IACzE;AACA,UAAM,qBAAqB,SAAS,MAAM;AACtC,+BAAyB;AACzB,uBAAiB;AACjB,uBAAiB;AAAA,IACrB,GAAG,EAAE;AAIL,aAAS,mBAAmB;AACxB,UAAI,CAAC,KAAK;AACN;AACJ,YAAM,OAAO,KAAK,MAAM,sBAAsB;AAC9C,iBAAW,QAAQ,KAAK,QAAQ,OAAO;AAAA,IAC3C;AACA,aAAS,mBAAmB;AACxB,UAAI,YAAY,SAAS;AACrB;AACJ,uBAAiB,QAAQ,KAAK,MAAM,YAAY,QAAQ,KAAK,CAAC;AAC9D,oBAAc,QAAQ,iBAAiB,EAAE,QAAQ,aAAa,YAAY,MAAM,CAAC;AACjF,oBAAc,QAAQ,iBAAiB,EAAE,QAAQ,aAAa,YAAY,MAAM,CAAC;AACjF,UAAI,CAAC,OAAO,YAAY;AACpB,0BAAkB,QAAQ,iBAAiB;AAAA,UACvC,KAAK,kBAAkB;AAAA,UACvB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,QACvB,CAAC;AAAA,MACL;AAAA,IACJ;AACA,cAAU,MAAM;AACZ,eAAS,MAAM,WAAW,MAAM;AAC5B,iCAAyB;AACzB,yBAAiB;AACjB,yBAAiB;AACjB,aAAK,MAAM;AAAA,MACf,GAAG,EAAE,CAAC;AACN,mBAAa;AACb,aAAO,iBAAiB,UAAU,oBAAoB,EAAE,SAAS,KAAK,CAAC;AAAA,IAC3E,CAAC;AACD,gBAAY,MAAM;AACd,UAAI,iBAAiB;AACjB,qBAAa,eAAe;AAAA,MAChC;AACA,UAAI,eAAe;AACf,sBAAc,aAAa;AAAA,MAC/B;AACA,aAAO,oBAAoB,UAAU,oBAAoB;AAAA,QACrD,SAAS;AAAA,MACb,CAAC;AAAA,IACL,CAAC;AAID,QAAI,UAAU;AACd,UAAM,gBAAgB,EAAE,GAAG,GAAG,GAAG,EAAE;AACnC,UAAM,cAAc,EAAE,GAAG,GAAG,GAAG,EAAE;AACjC,UAAM,UAAU,SAAS,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC;AACvC,UAAM,UAAU,IAAI,KAAK;AACzB,UAAM,mBAAmB,MAAM;AAC3B,cAAQ,QAAQ;AAAA,IACpB;AACA,UAAM,mBAAmB,MAAM;AAC3B,cAAQ,QAAQ;AAAA,IACpB;AACA,aAAS,gBAAgB,OAAO;AAC5B,UAAI,CAAC,SAAS,YAAY,QAAQ,EAAE,SAAS,MAAM,OAAO,OAAO,GAAG;AAChE;AAAA,MACJ;AACA,gBAAU,MAAM,SAAS;AACzB,UAAI,CAAC,SAAS;AACV,cAAM,eAAe;AAAA,MACzB;AACA,UAAK,CAAC,WAAW,MAAM,WAAW,KAAM,UAAU,OAAO;AACrD;AAAA,MACJ;AACA,oBAAc,IAAI,UAAU,MAAM,QAAQ,CAAC,EAAE,UAAU,MAAM;AAC7D,oBAAc,IAAI,UAAU,MAAM,QAAQ,CAAC,EAAE,UAAU,MAAM;AAC7D,eAAS,iBAAiB,UAAU,cAAc,aAAa,gBAAgB,IAAI;AACnF,eAAS,iBAAiB,UAAU,aAAa,WAAW,eAAe,IAAI;AAAA,IACnF;AACA,UAAM,iBAAiB,SAAS,CAAC,UAAU;AACvC,kBAAY,IAAI,UAAU,MAAM,QAAQ,CAAC,EAAE,UAAU,MAAM;AAC3D,kBAAY,IAAI,UAAU,MAAM,QAAQ,CAAC,EAAE,UAAU,MAAM;AAC3D,YAAM,SAAS,YAAY,IAAI,cAAc;AAC7C,YAAM,SAAS,YAAY,IAAI,cAAc;AAC7C,cAAQ,IAAI;AACZ,cAAQ,IAAI;AAAA,IAChB,GAAG,OAAO,QAAQ;AAClB,aAAS,gBAAgB;AACrB,YAAM,YAAY,OAAO,QAAQ,QAAQ,KAAK;AAC9C,YAAM,YAAY,KAAK,KAAK,QAAQ,CAAC,IAAI;AACzC,YAAM,gBAAgB,KAAK,MAAM,QAAQ,IAAI,WAAW,QAAQ,SAAS,IAAI;AAE7E,UAAI,iBAAiB,CAAC,SAAS;AAC3B,cAAM,eAAe,CAAC,MAAM;AACxB,YAAE,gBAAgB;AAClB,iBAAO,oBAAoB,SAAS,cAAc,IAAI;AAAA,QAC1D;AACA,eAAO,iBAAiB,SAAS,cAAc,IAAI;AAAA,MACvD;AACA,cAAQ,kBAAkB,QAAQ,aAAa;AAC/C,cAAQ,IAAI;AACZ,cAAQ,IAAI;AACZ,eAAS,oBAAoB,UAAU,cAAc,aAAa,gBAAgB,IAAI;AACtF,eAAS,oBAAoB,UAAU,aAAa,WAAW,eAAe,IAAI;AAAA,IACtF;AAIA,aAAS,eAAe;AACpB,UAAI,CAAC,OAAO,YAAY,OAAO,YAAY,GAAG;AAC1C;AAAA,MACJ;AACA,sBAAgB,YAAY,MAAM;AAC9B,YAAI,OAAO,wBAAwB,QAAQ,OAAO;AAC9C;AAAA,QACJ;AACA,aAAK;AAAA,MACT,GAAG,OAAO,QAAQ;AAAA,IACtB;AACA,aAAS,gBAAgB;AACrB,UAAI,eAAe;AACf,sBAAc,aAAa;AAC3B,wBAAgB;AAAA,MACpB;AACA,mBAAa;AAAA,IACjB;AAIA,UAAM,YAAY,IAAI,KAAK;AAC3B,aAAS,QAAQ,YAAY;AACzB,YAAM,aAAa,OAAO,aACpB,aACA,iBAAiB;AAAA,QACf,KAAK;AAAA,QACL,KAAK,cAAc;AAAA,QACnB,KAAK,cAAc;AAAA,MACvB,CAAC;AACL,UAAI,kBAAkB,UAAU,cAAc,UAAU,OAAO;AAC3D;AAAA,MACJ;AACA,WAAK,eAAe;AAAA,QAChB,gBAAgB;AAAA,QAChB,mBAAmB,kBAAkB;AAAA,QACrC,gBAAgB,eAAe;AAAA,QAC/B,aAAa,YAAY;AAAA,MAC7B,CAAC;AACD,gBAAU,QAAQ;AAClB,qBAAe,QAAQ,kBAAkB;AACzC,wBAAkB,QAAQ;AAC1B,wBAAkB,WAAW,MAAM;AAC/B,YAAI,OAAO,YAAY;AACnB,gBAAM,eAAe,iBAAiB;AAAA,YAClC,KAAK;AAAA,YACL,KAAK,cAAc;AAAA,YACnB,KAAK;AAAA,UACT,CAAC;AACD,cAAI,iBAAiB,kBAAkB,OAAO;AAC1C,8BAAkB,QAAQ;AAC1B,iBAAK,QAAQ;AAAA,cACT,mBAAmB,kBAAkB;AAAA,cACrC,gBAAgB;AAAA,YACpB,CAAC;AAAA,UACL;AAAA,QACJ;AACA,aAAK,qBAAqB,kBAAkB,KAAK;AACjD,aAAK,aAAa;AAAA,UACd,mBAAmB,kBAAkB;AAAA,UACrC,gBAAgB,eAAe;AAAA,UAC/B,aAAa,YAAY;AAAA,QAC7B,CAAC;AACD,kBAAU,QAAQ;AAClB,sBAAc;AAAA,MAClB,GAAG,OAAO,UAAU;AAAA,IACxB;AACA,aAAS,OAAO;AACZ,cAAQ,kBAAkB,QAAQ,OAAO,aAAa;AAAA,IAC1D;AACA,aAAS,OAAO;AACZ,cAAQ,kBAAkB,QAAQ,OAAO,aAAa;AAAA,IAC1D;AACA,UAAM,MAAM,EAAE,SAAS,MAAM,KAAK;AAClC,YAAQ,OAAO,GAAG;AAClB,YAAQ,aAAa,SAAS;AAI9B,UAAM,iBAAiB,SAAS,MAAM,kBAAkB;AAAA,MACpD;AAAA,MACA,cAAc,kBAAkB;AAAA,MAChC,aAAa,YAAY;AAAA,IAC7B,CAAC,CAAC;AACF,YAAQ,kBAAkB,cAAc;AACxC,UAAM,aAAa,SAAS,MAAM;AAC9B,YAAM,YAAY,OAAO,QAAQ,QAAQ,KAAK;AAC9C,YAAM,UAAU,eAAe,QAAQ,WAAW,QAAQ;AAC1D,aAAO;AAAA,QACH,WAAW,cAAc,QAAQ,IAAI;AAAA,QACrC,YAAY,GAAG,UAAU,QAAQ,OAAO,aAAa;AAAA,QACrD,QAAQ,OAAO,aAAa,MAAM,YAAY,QAAQ,WAAW,YAAY;AAAA,QAC7E,OAAO;AAAA,MACX;AAAA,IACJ,CAAC;AACD,aAAS,kBAAkB;AACvB,yBAAmB;AACnB,+BAAyB;AACzB,uBAAiB;AACjB,uBAAiB;AACjB,oBAAc;AAAA,IAClB;AAEA,WAAO,KAAK,aAAa,EAAE,QAAQ,CAAC,SAAS;AACzC,UAAI,CAAC,YAAY,EAAE,SAAS,IAAI;AAC5B;AACJ,YAAM,MAAM,MAAM,IAAI,GAAG,eAAe;AAAA,IAC5C,CAAC;AAED,UAAM,MAAM,MAAM,YAAY,GAAG,CAAC,QAAQ;AACtC,UAAI,QAAQ,kBAAkB,OAAO;AACjC,gBAAQ,OAAO,GAAG,CAAC;AAAA,MACvB;AAAA,IACJ,CAAC;AAED,UAAM,aAAa,gBAAgB;AAEnC,uBAAmB;AACnB,UAAM,OAAO;AAAA,MACT;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,cAAc;AAAA,MACd,UAAU;AAAA,MACV,UAAU;AAAA,MACV,aAAa;AAAA,IACjB;AACA,WAAO;AAAA,MACH;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ,CAAC;AACD,UAAM,aAAa,MAAM,WAAW,MAAM;AAC1C,UAAM,aAAa,MAAM;AACzB,UAAM,aAAa,SAAS,IAAI;AAChC,WAAO,MAAM;AACT,YAAM,iBAAiB,gBAAgB,eAAe,QAAQ,eAAe,SAAS,SAAS,WAAW,UAAU,CAAC;AACrH,YAAM,kBAAkB,eAAe,QAAQ,eAAe,SAAS,SAAS,WAAW,UAAU,MAAM,CAAC;AAC5G,qBAAe,QAAQ,CAAC,IAAI,UAAW,GAAG,MAAM,QAAQ,KAAM;AAC9D,UAAI,SAAS;AACb,UAAI,OAAO,YAAY;AACnB,cAAM,eAAe,eAAe,IAAI,CAAC,IAAI,UAAU,WAAW,IAAI;AAAA,UAClE,OAAO,CAAC,eAAe,SAAS;AAAA,UAChC,SAAS;AAAA,UACT,KAAK,gBAAgB;AAAA,QACzB,CAAC,CAAC;AACF,cAAM,cAAc,eAAe,IAAI,CAAC,IAAI,UAAU,WAAW,IAAI;AAAA,UACjE,OAAO,eAAe,SAAS;AAAA,UAC/B,SAAS;AAAA,UACT,KAAK,eAAe;AAAA,QACxB,CAAC,CAAC;AACF,iBAAS,CAAC,GAAG,cAAc,GAAG,gBAAgB,GAAG,WAAW;AAAA,MAChE;AACA,aAAO,QAAQ;AACf,kBAAY,QAAQ,KAAK,IAAI,eAAe,QAAQ,CAAC;AACrD,YAAM,UAAU,EAAE,MAAM;AAAA,QACpB,OAAO;AAAA,QACP,OAAO,WAAW;AAAA,QAClB,oBAAoB,OAAO,YAAY,kBAAkB;AAAA,QACzD,4BAA4B,OAAO,YAAY,kBAAkB;AAAA,MACrE,GAAG,MAAM;AACT,YAAM,aAAa,EAAE,OAAO,EAAE,OAAO,qBAAqB,GAAG,OAAO;AACpE,aAAO,EAAE,WAAW;AAAA,QAChB,KAAK;AAAA,QACL,OAAO;AAAA,UACH,UAAU;AAAA,UACV,iBAAiB,OAAO,QAAQ;AAAA,QACpC;AAAA,QACA,KAAK,OAAO;AAAA,QACZ,cAAc;AAAA,QACd,UAAU;AAAA,QACV,cAAc;AAAA,QACd,cAAc;AAAA,MAClB,GAAG,CAAC,YAAY,gBAAgB,EAAE,aAAa,CAAC,CAAC;AAAA,IACrD;AAAA,EACJ;AACJ,CAAC;AAED,IAAM,QAAQ;AAAA,EACV,SAAS;AAAA,EACT,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AACf;AAEA,IAAM,OAAO,CAAC,UAAU;AACpB,QAAM,WAAW,MAAM;AACvB,MAAI,CAAC,YAAY,OAAO,aAAa,UAAU;AAC3C;AAAA,EACJ;AACA,QAAM,OAAO,MAAM,QAAQ;AAC3B,QAAM,SAAS,EAAE,QAAQ,EAAE,GAAG,KAAK,CAAC;AACpC,QAAM,YAAa,MAAM,SAAS;AAClC,QAAM,UAAU,EAAE,SAAS,SAAS;AACpC,SAAO,EAAE,OAAO;AAAA,IACZ,OAAO;AAAA,IACP,SAAS;AAAA,IACT,MAAM;AAAA,IACN,WAAW;AAAA,EACf,GAAG,CAAC,SAAS,MAAM,CAAC;AACxB;AACA,KAAK,QAAQ,EAAE,MAAM,QAAQ,OAAO,OAAO;AAE3C,IAAM,aAAa,CAAC,OAAO,EAAE,OAAO,MAAM,MAAM;AAC5C,QAAM,EAAE,MAAM,UAAU,MAAM,SAAS,IAAI,SAAS,CAAC;AACrD,QAAM,SAAS,OAAO,UAAU,SAAS,OAAO,OAAO,CAAC,GAAG,cAAc,CAAC,CAAC;AAC3E,QAAM,WAAW,OAAO,YAAY,IAAI,CAAC,CAAC;AAC1C,QAAM,WAAW,OAAO,YAAY,IAAI,CAAC,CAAC;AAC1C,QAAM,eAAe,OAAO,gBAAgB,IAAI,CAAC,CAAC;AAClD,QAAM,MAAM,OAAO,OAAO,CAAC,CAAC;AAC5B,QAAM,EAAE,KAAK,WAAW,IAAI;AAC5B,QAAM,QAAQ,QAAQ;AACtB,QAAM,aAAa,EAAE,UAAU;AAAA,IAC3B,MAAM;AAAA,IACN,OAAO;AAAA,MACH;AAAA,MACA,CAAC,cAAc,aAAa,SAAS,SAAS,SAAS;AAAA,MACvD,UAAU,QAAQ,UAAU,SAAS,SAAS,MAAM;AAAA,IACxD;AAAA,IACA,cAAc;AAAA,IACd,SAAS,IAAI;AAAA,EACjB,IAAI,aAAa,QAAQ,aAAa,SAAS,SAAS,SAAS,MAAM,EAAE,MAAM,EAAE,MAAM,QAAQ,eAAe,YAAY,CAAC,CAAC;AAC5H,QAAM,aAAa,EAAE,UAAU;AAAA,IAC3B,MAAM;AAAA,IACN,OAAO;AAAA,MACH;AAAA,MACA,CAAC,cAAc,aAAa,SAAS,SAAS,SAAS;AAAA,MACvD,UAAU,QAAQ,UAAU,SAAS,SAAS,MAAM;AAAA,IACxD;AAAA,IACA,cAAc;AAAA,IACd,SAAS,IAAI;AAAA,EACjB,IAAI,aAAa,QAAQ,aAAa,SAAS,SAAS,SAAS,MAAM,EAAE,MAAM,EAAE,MAAM,QAAQ,cAAc,aAAa,CAAC,CAAC;AAC5H,SAAO,CAAC,YAAY,UAAU;AAClC;AAEA,IAAM,aAAa,MAAM;AACrB,QAAM,WAAW,OAAO,YAAY,IAAI,CAAC,CAAC;AAC1C,QAAM,WAAW,OAAO,YAAY,IAAI,CAAC,CAAC;AAC1C,QAAM,eAAe,OAAO,gBAAgB,IAAI,CAAC,CAAC;AAClD,QAAM,MAAM,OAAO,OAAO,CAAC,CAAC;AAC5B,QAAM,WAAW,CAAC,UAAU,iBAAiB;AAAA,IACzC,KAAK,aAAa;AAAA,IAClB,KAAK,SAAS;AAAA,IACd,KAAK;AAAA,EACT,CAAC,MAAM;AACP,QAAM,WAAW,CAAC;AAClB,WAAS,QAAQ,SAAS,OAAO,QAAQ,SAAS,QAAQ,GAAG,SAAS;AAClE,UAAM,SAAS,EAAE,UAAU;AAAA,MACvB,MAAM;AAAA,MACN,OAAO;AAAA,QACH,+BAA+B;AAAA,QAC/B,uCAAuC,SAAS,KAAK;AAAA,MACzD;AAAA,MACA,cAAc,qBAAqB,QAAQ;AAAA,MAC3C,SAAS,MAAM,IAAI,QAAQ,KAAK;AAAA,IACpC,CAAC;AACD,UAAM,OAAO,EAAE,MAAM,EAAE,OAAO,6BAA6B,KAAK,MAAM,GAAG,MAAM;AAC/E,aAAS,KAAK,IAAI;AAAA,EACtB;AACA,SAAO,EAAE,MAAM,EAAE,OAAO,uBAAuB,GAAG,QAAQ;AAC9D;AAEA,IAAI,QAAQ,gBAAgB;AAAA,EACxB,MAAM;AAAA,EACN,OAAO;AAAA,IACH,OAAO;AAAA,MACH,MAAM;AAAA,MACN,SAAS;AAAA,IACb;AAAA,IACA,SAAS;AAAA,MACL,MAAM;AAAA,MACN,SAAS;AAAA,IACb;AAAA,EACJ;AAAA,EACA,MAAM,OAAO,EAAE,MAAM,GAAG;AACpB,UAAM,SAAS,OAAO,UAAU,SAAS,OAAO,OAAO,CAAC,GAAG,cAAc,CAAC,CAAC;AAC3E,UAAM,eAAe,OAAO,gBAAgB,IAAI,CAAC,CAAC;AAClD,UAAM,iBAAiB,OAAO,kBAAkB,IAAI,CAAC,CAAC;AACtD,UAAM,aAAa,OAAO,cAAc,IAAI,CAAC,CAAC;AAC9C,UAAM,YAAY,OAAO,aAAa,IAAI,KAAK,CAAC;AAChD,UAAM,aAAa,SAAS,OAAO;AAAA,MAC/B,OAAO,WAAW,QAAQ,GAAG,WAAW,YAAY;AAAA,IACxD,EAAE;AACF,UAAM,WAAW,MAAM,MAAM,UAAU,aAAa;AACpD,UAAM,SAAS,MAAM,MAAM,UAAU,aAAa,QAAQ;AAC1D,UAAM,SAAS,MAAM,MAAM,UAAU,aAAa,QAAQ;AAC1D,UAAM,YAAY,MAAM;AACpB,YAAM,MAAM,KAAK,MAAM,eAAe,KAAK;AAC3C,YAAM,MAAM,KAAK,KAAK,eAAe,QAAQ,OAAO,cAAc,CAAC;AACnE,aAAO,MAAM,SAAS,OAAO,MAAM,SAAS;AAAA,IAChD;AACA,WAAO,MAAM;AACT,UAAI;AACJ,aAAO,EAAE,MAAM;AAAA,QACX,OAAO,WAAW;AAAA,QAClB,OAAO;AAAA,UACH,iBAAiB;AAAA,UACjB,yBAAyB,MAAM;AAAA,UAC/B,4BAA4B,UAAU;AAAA,UACtC,2BAA2B,SAAS;AAAA,UACpC,yBAAyB,OAAO;AAAA,UAChC,yBAAyB,OAAO;AAAA,UAChC,4BAA4B,UAAU;AAAA,QAC1C;AAAA,QACA,eAAe,CAAC,UAAU;AAAA,MAC9B,IAAI,KAAK,MAAM,aAAa,QAAQ,OAAO,SAAS,SAAS,GAAG,KAAK,KAAK,CAAC;AAAA,IAC/E;AAAA,EACJ;AACJ,CAAC;",
  "names": []
}
